{
  "async main": {
    "prefix": "main",
    "body": [
      "const main = async () => {",
      "  $1",
      "}",
      "",
      "main().catch(console.error)"
    ],
    "description": "async main"
  },
  "sleep": {
    "prefix": "sleep",
    "body": [
      "const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms))"
    ],
    "description": "async sleep"
  },
  "function": {
    "prefix": "fn",
    "body": [
      "const $1 = () => {",
      "",
      "}"
    ],
    "description": "function"
  },
  "async function": {
    "prefix": "afn",
    "body": [
      "const $1 = async () => {",
      "",
      "}"
    ],
    "description": "async function"
  }
  // Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
}